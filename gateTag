//this uses the attiny85 digispark breakout board photocell, a single 5v ws2811 LED and a 100k ohm resistor
//sensor is plugged into power and pin 5, resistor from pin 5 to ground, led to pin 3
int value = 9999;  
int threshold = 700;
//#include "DigiKeyboard.h"  //for debugging, not using anymore

int gatecolortest = 1;
#include <FastLED.h>
int berrydepositdelay = 55;
#define LED_PIN     3
#define NUM_LEDS    1
#define BRIGHTNESS  255
#define LED_TYPE    WS2811
#define COLOR_ORDER GRB
CRGB leds[NUM_LEDS];
#define UPDATES_PER_SECOND 100

int i=0;
int analogpin = 0; //THIS IS P5, P5 is analog input 0, so when you are using analog read, you refer to it as 0.
int digitalpin = 3; //actual pin p3

void setup() {
  FastLED.addLeds<LED_TYPE, LED_PIN>(leds, NUM_LEDS);
  //LEDS.addLeds<WS2812,5,RGB>(leds,NUM_LEDS);
  //LEDS.setBrightness(255);
  
  pinMode(analogpin, INPUT);
  pinMode(digitalpin, OUTPUT);
  Serial.begin(9600);
  leds[0] = CRGB(255,255,255);
  FastLED.show();
  delay(500);
}

void loop() {
value = analogRead(analogpin);   
//Serial.println(value);   
//Serial.println(gatecolortest);            
  if(value < threshold){
    Serial.println("triggered");  
    gatecolortest++;
          if (gatecolortest % 2 == 1){
                for (int i = 0; i <= 3; i++){
                  leds[0] = CRGB(0,0,255);
                  FastLED.show();
                  delay(50);
                  leds[0] = CRGB::Black; 
                  FastLED.show();
                  delay(50);
                  
                }
            leds[0] = CRGB(0,0,255);
            FastLED.show();
          }
          else {
            for (int i = 0; i <= 3; i++){
              leds[0] = CRGB::Orange;
              FastLED.show();
              delay(50);
              leds[0] = CRGB::Black; 
              FastLED.show();
              delay(50);    
            }
          leds[0] = CRGB::Orange;
          FastLED.show(); 
         }                 
     }
} 

